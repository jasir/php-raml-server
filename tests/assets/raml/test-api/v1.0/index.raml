#%RAML 0.8
title: Test Service - greetings!
version: v1.0
mediaType:  application/json
baseUri: http://www.api.com

/validateBodyIncluded:
  description: I need valid json body
  post:
    body:
      application/json:
        schema: !include body-schema.json
        example: |
          {
            "songId": "550e8400-e29b-41d4-a716-446655440000",
            "songTitle": "Get Lucky",
            "albumId": "183100e3-0e2b-4404-a716-66104d440550"
          }





/greet:
  get:
    queryParameters:
      who:
        description: Who to greet
        example: "John Doe"

    responses:
      200:
        description: Testing the service
        body:
          application/json:
            example: !include greet.sample

/kill:
  get:
    queryParameters:
      who:
        description: Who to kill
        example: "John Doe"

    responses:
      200:
        description: Testing the service
        body:
          application/json:
            example: !include kill.sample

/needParameter:
  get:
    queryParameters:
      fill:
        description: Needed parameter
        example: 'fill-me'
        required: true
    responses:
      200:
        description: I was filled


/validateBody:
  description: I need valid json body
  post:
    body:
      application/json:
        schema: |
          {
            "type": "object",
            "$schema": "http://json-schema.org/draft-03/schema",
            "id": "http://jsonschema.net",
            "required": true,
            "properties": {
              "songTitle": {
                "type": "string",
                "required": true
              },
              "albumId": {
                "type": "string",
                "required": true,
                "minLength": 36,
                "maxLength": 36
              }
            }
          }
        example: |
          {
            "songId": "550e8400-e29b-41d4-a716-446655440000",
            "songTitle": "Get Lucky",
            "albumId": "183100e3-0e2b-4404-a716-66104d440550"
          }

/giveXmlOrJson:
  description: Gives either Xml or JSON based on header
  get:
    responses:
        200:
          body:
            application/json:
              example: |
                {"a": "I am json"}
            application/xml:
              example: !include some.xml
